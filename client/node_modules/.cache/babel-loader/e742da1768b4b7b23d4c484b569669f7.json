{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.util';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signOutStart() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutStart);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/Rami/Desktop/github/Repositories/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","UserActionTypes","signOutStart","signOut","error","message","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signUp","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  googleProvider,\r\n  auth,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from '../../firebase/firebase.util';\r\nimport {\r\n  signInFailure,\r\n  signInSuccess,\r\n  signOutFailure,\r\n  signOutSuccess,\r\n  signUpFailure,\r\n  signUpSuccess,\r\n} from './user.actions';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* signOutStart() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield call(getSnapshotFromUserAuth, user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\r\n    yield call(getSnapshotFromUserAuth, user);\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield call(getSnapshotFromUserAuth, userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* signUp({ payload: { displayName, email, password } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (error) {\r\n    yield put(signUpFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutStart);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSignUpStart),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}