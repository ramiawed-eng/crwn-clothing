{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { googleSignInFailure, googleSignInSuccess, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* signInWithEmail() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Rami/Desktop/github/Repositories/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","googleProvider","auth","createUserProfileDocument","googleSignInFailure","googleSignInSuccess","emailSignInSuccess","emailSignInFailure","UserActionTypes","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","signInWithEmail","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,cADF,EAEEC,IAFF,EAGEC,yBAHF,QAIO,8BAJP;AAKA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAOA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBV,cAArB,CAAvB;AACA,UAAMW,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACPO,mBAAmB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACM,mBAAmB,CAACa,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,GAA4B,CAAE;AAErC,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMvB,UAAU,CAACW,eAAe,CAACa,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUa,kBAAV,GAA+B;AACpC,QAAMzB,UAAU,CAACW,eAAe,CAACe,mBAAjB,EAAsCJ,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUK,QAAV,GAAqB;AAC1B,QAAMxB,GAAG,CAAC,CAACD,IAAI,CAACqB,mBAAD,CAAL,EAA4BrB,IAAI,CAACuB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  googleProvider,\r\n  auth,\r\n  createUserProfileDocument,\r\n} from '../../firebase/firebase.util';\r\nimport {\r\n  googleSignInFailure,\r\n  googleSignInSuccess,\r\n  emailSignInSuccess,\r\n  emailSignInFailure,\r\n} from './user.actions';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail() {}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}