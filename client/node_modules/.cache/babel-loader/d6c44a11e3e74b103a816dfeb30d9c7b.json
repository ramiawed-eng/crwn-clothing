{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist'; // redux-thunk library for async fetch\n\nimport thunk from 'redux-thunk'; // redux-sagas\n\nimport createSagaMiddleware from 'redux-saga'; // LOGGER LIBRARY\n// catches the action, it console logs it out\n// and then it moves it along\n\nimport { logger } from 'redux-logger';\nimport rootReducer from './root-reducer';\nconst createSagaMiddlewares = createSagaMiddleware();\nconst middlewares = [createSagaMiddlewares];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\ncreateSagaMiddlewares.run();\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/Rami/Desktop/github/Repositories/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","thunk","createSagaMiddleware","logger","rootReducer","createSagaMiddlewares","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAEA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,qBAAqB,GAAGH,oBAAoB,EAAlD;AAEA,MAAMI,WAAW,GAAG,CAACD,qBAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,MAAjB;AACD;;AAED,OAAO,MAAMQ,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,qBAAqB,CAACO,GAAtB;AAEA,OAAO,MAAMC,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\n\r\n// redux-thunk library for async fetch\r\nimport thunk from 'redux-thunk';\r\n\r\n// redux-sagas\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n// LOGGER LIBRARY\r\n// catches the action, it console logs it out\r\n// and then it moves it along\r\nimport { logger } from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst createSagaMiddlewares = createSagaMiddleware();\r\n\r\nconst middlewares = [createSagaMiddlewares];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\ncreateSagaMiddlewares.run();\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}