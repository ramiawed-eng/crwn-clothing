{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.util';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nimport ShopTypes from './shop.types';\nexport function* fetchCollectionsStartAsyn() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopTypes.FETCH_COLLECTIONS_START, fetchCollectionsStartAsyn);\n}\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/Rami/Desktop/github/Repositories/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","convertCollectionsSnapshotToMap","firestore","fetchCollectionsSuccess","fetchCollectionsFailure","ShopTypes","fetchCollectionsStartAsyn","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,8BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,eAHP;AAKA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAO,UAAUC,yBAAV,GAAsC;AAC3C,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BG,+BAD+B,EAE/BQ,QAF+B,CAAjC;AAKA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CACdQ,SAAS,CAACU,uBADI,EAEdT,yBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,QAAV,GAAqB;AAC1B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport {\r\n  convertCollectionsSnapshotToMap,\r\n  firestore,\r\n} from '../../firebase/firebase.util';\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n} from './shop.action';\r\n\r\nimport ShopTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsStartAsyn() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    ShopTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsStartAsyn\r\n  );\r\n}\r\n\r\nexport function* shopSaga() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}