{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.util';\nimport { googleSignInFailure } from './user.actions';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    console.log(user);\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Rami/Desktop/github/Repositories/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","googleProvider","auth","createUserProfileDocument","googleSignInFailure","UserActionTypes","signInWithGoogle","user","signInWithPopup","console","log","error","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSaga"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACEC,cADF,EAEEC,IAFF,EAGEC,yBAHF,QAIO,8BAJP;AAKA,SAASC,mBAAT,QAAoC,gBAApC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAAvB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACd,UAAMb,GAAG,CAACM,mBAAmB,CAACO,KAAK,CAACC,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMhB,UAAU,CAACQ,eAAe,CAACS,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUS,QAAV,GAAqB;AAC1B,QAAMf,GAAG,CAAC,CAACD,IAAI,CAACc,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  googleProvider,\r\n  auth,\r\n  createUserProfileDocument,\r\n} from '../../firebase/firebase.util';\r\nimport { googleSignInFailure } from './user.actions';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    console.log(user);\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}